#!/bin/sh

FIRST_ARGUMENT="$1"
SECOND_ARGUMENT="$2"
THIRD_ARGUMENT="$3"
FOURD_ARGUMENT="$4"
CURDIR="$(pwd)"

# sh doProject all logic-taxi ExcelTaxi com.exceltaxisantcugat.user
## folder = logic-taxi
## AppName = ExcelTaxi
## AppId = com.exceltaxisantcugat.user

if [ $FIRST_ARGUMENT == "delete" ] 
then
  echo "------------------------------------------------------"
  echo "rm -rf $2"
  echo "------------------------------------------------------"
  rm -rf $2
fi

if [ $FIRST_ARGUMENT == "start" ] 
then
  echo "------------------------------------------------------"
  echo "ionic start $2 blank --type angular --capacitor --no-confirmn"
  echo "------------------------------------------------------"
  ionic start $2 blank --no-confirm --type angular --capacitor && cd $2 && npm audit fix && cd ..
fi

if [ $FIRST_ARGUMENT == "resources" ] 
then
  echo "------------------------------------------------------"
  echo "cp -R resources $2/resources"
  echo "------------------------------------------------------"
  cp -rf base/resources $2/resources
  cp -rf base/do $2/do && chmod +x $2/do
  cp -rf base/do.bat $2/do.bat
fi

if [ $FIRST_ARGUMENT == "init" ] 
then
  echo "------------------------------------------------------"
  echo "cd $2 && npx cap init $3 $4"
  echo "------------------------------------------------------"
  cd $2 && npx cap init $3 $4 && cd ..
  cd $2 && npm install electron --save-dev && cd ..
  cd $2 && npm install electron-builder --save-dev && cd ..
fi

if [ $FIRST_ARGUMENT == "build" ] 
then
  echo "------------------------------------------------------"
  echo "ionic build"
  echo "------------------------------------------------------"
  cd $2 && ionic build && cd ..
fi

if [ $FIRST_ARGUMENT == "add-platforms" ] 
then
  echo "------------------------------------------------------"
  echo "npx cap add ios && npx cap add android && npm i @capacitor-community/electron && npx cap add @capacitor-community/electron"
  echo "------------------------------------------------------"
  cd $2 && npx cap add ios && npx cap add android && npm i @capacitor-community/electron && npx cap add @capacitor-community/electron && cd ..
fi

if [ $FIRST_ARGUMENT == "resources-platforms" ] 
then
  echo "------------------------------------------------------"
  echo "cordova-res --skip-config --copy"
  echo "------------------------------------------------------"
  cd $2 && cordova-res --skip-config --copy && cd ..
fi

if [ $FIRST_ARGUMENT == "copy-platforms" ] 
then
  echo "------------------------------------------------------"
  echo "npx cap copy && npx cap copy @capacitor-community/electron"
  echo "------------------------------------------------------"
  cd $2 && npx cap copy && npx cap copy @capacitor-community/electron && cd ..
fi

if [ $FIRST_ARGUMENT == "sync-platforms" ] 
then
  echo "------------------------------------------------------"
  echo "npx cap sync && npx cap sync @capacitor-community/electron"
  echo "------------------------------------------------------"
  cd $2 && npx cap sync && npx cap sync @capacitor-community/electron && cd ..
fi

if [ $FIRST_ARGUMENT == "copy-electron-resources" ] 
then
  echo "------------------------------------------------------"
  echo "copy-electron-resources"
  echo "------------------------------------------------------"
  cp -rf base/resources/appIcon.icns $2/electron/assets/appIcon.icns 
  cp -rf base/resources/appIcon.png $2/electron/assets/appIcon.png 
  cp -rf base/resources/appIcon.ico $2/electron/assets/appIcon.ico
  cp -rf base/resources/splash-electron.png $2/electron/assets/splash.png
  cp -rf base/electron/src/index.ts $2/electron/src/index.ts
  rm -rf $2/electron/assets/splash.gif
  mkdir $2/electron/build/ && cp -rf base/resources/appIcon.ico $2/electron/build/appIcon.ico
fi

if [ $FIRST_ARGUMENT == "install-packages" ] 
then
  echo "------------------------------------------------------"
  echo "install-packages"
  echo "------------------------------------------------------"

  echo "------------------------------------------------------"
  echo "FMC"
  echo "------------------------------------------------------"
  cd $2 && npm install @capacitor-community/fcm && cd ..
  cp -rf base/GoogleService-Info.plist $2/ios/App/App/GoogleService-Info.plist
  cp -rf base/google-services.json $2/android/app/google-services.json

  echo "------------------------------------------------------"
  echo "Biometric"
  echo "------------------------------------------------------"
  cd $2 && npm install capacitor-face-id && cd ..
  cd $2 && npm install @ionic-native/android-fingerprint-auth && cd ..
  cd $2 && npm install cordova-plugin-android-fingerprint-auth && cd ..
  
  echo "------------------------------------------------------"
  echo "Calendar"
  echo "------------------------------------------------------"
  cd $2 && npm install @ionic-native/calendar && cd ..
  cd $2 && npm install cordova-plugin-calendar && cd ..

  echo "------------------------------------------------------"
  echo "Badge"
  echo "------------------------------------------------------"
  cd $2 && npm install cordova-plugin-badge && cd ..
  cd $2 && npm install @ionic-native/badge && cd ..

  echo "------------------------------------------------------"
  echo "In App Browser"
  echo "------------------------------------------------------"
  cd $2 && npm install cordova-plugin-inappbrowser && cd ..
  cd $2 && npm install @ionic-native/in-app-browser && cd ..
  
  echo "------------------------------------------------------"
  echo "Ionic Capacitor Keep Screen On plugin"
  echo "------------------------------------------------------"
  cd $2 && npm install capacitor-keep-screen-on && cd ..
  
  echo "------------------------------------------------------"
  echo "nx-electrton"
  echo "------------------------------------------------------"
  cd $2 && npm install ngx-electron --save && cd ..
  
  echo "------------------------------------------------------"
  echo "electron-download-manager"
  echo "------------------------------------------------------"
  cd $2/electron && npm install electron-download-manager && cd .. && cd ..
  
  echo "------------------------------------------------------"
  echo "@angular/google-maps"
  echo "------------------------------------------------------"
  cd $2 && npm install @angular/google-maps --save && cd ..
  
  echo "------------------------------------------------------"
  echo "Translate && tslib && file-saver && moment"
  echo "------------------------------------------------------"
  cd $2 && npm install @ngx-translate/core --save-prod && cd ..
  cd $2 && npm install @ngx-translate/http-loader --save-prod && cd ..
  cd $2 && npm install tslib --save-prod && cd ..
  cd $2 && npm install --save file-saver && cd ..
  cd $2 && npm install @types/file-saver --save-dev && cd ..
  cd $2 && npm install moment --save-prod && cd ..
fi

if [ $FIRST_ARGUMENT == "install-base" ] 
then
  cp -rf base/core $2/src/core
  cp -rf base/modules $2/src/modules
  cp -rf base/config.ts $2/src/config.ts
  rm -rf $2/angular.json && cp -rf base/angular.json $2/angular.json
  rm -rf $2/src/assets && cp -rf base/assets $2/src/assets
  rm -rf $2/src/environments && cp -rf base/environments $2/src/environments
  rm -rf $2/src/theme && cp -rf base/theme $2/src/theme
  rm -rf $2/src/app && cp -rf base/app $2/src/app
  rm -rf $2/src/test.ts
fi

if [ $FIRST_ARGUMENT == "all" ] 
then
  sh doProject delete $2 
  sh doProject start $2 
  sh doProject resources $2 
  sh doProject init $2 $3 $4
  sh doProject build $2
  sh doProject add-platforms $2
  sh doProject copy-platforms $2
  sh doProject copy-electron-resources $2
  sh doProject install-packages $2
  sh doProject install-base $2
  sh doProject resources-platforms $2
  sh doProject build $2
  sh doProject copy-platforms $2
  sh doProject sync-platforms $2
fi